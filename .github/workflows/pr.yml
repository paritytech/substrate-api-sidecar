name: pr

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Node v18
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Linter.
        run: yarn lint
  tests:
      # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Node v18
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Unit tests.
        run: yarn test:ci

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Node v18
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Build
        run: yarn build

  build-docs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Node v18
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install JS dependencies
        run: yarn install

      - name: Build Docs
        run: yarn build:docs

  build-npm-release:
      # This test is to make sure sidecar can release a binary without any errors.
      # This script does not publish a release, but instead uses yarn to create a tarball and
      # install it locally. Once installed a binary is attached to sidecars node_modules, and that
      # binary is then tested against. For more in depth information reference the docs at
      # `../../scripts/README.md`.

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn
    - run: yarn test:test-release
